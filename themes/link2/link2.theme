<?php

/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */

use Drupal\taxonomy\Entity\Term;

 /**
	* Implements hook_preprocess_views_view
	*/
function link2_preprocess_views_view(&$vars){
	// only use unique location NIDs for service view
	if ($vars['view']->id() === 'service_view') {
		$rows = $vars['rows'][0]['#rows'];
		$new_rows = [];
		$used_location_nids = [];
		foreach ($rows as $row){
			$location_nid = $row['#row']->node_field_data_node__field_associated_location_nid;
			if (!in_array($location_nid, $used_location_nids)) {
				$used_location_nids[] = $location_nid;
				$new_rows[] = $row;
			}
		}
		$vars['rows'][0]['#rows'] = $new_rows;
	}
	// only use unique service TIDs for service view on location page
	if ($vars['view']->id() === 'service' && $vars['display_id'] === 'block_2') {
		$rows = $vars['rows'][0]['#rows'];
		$new_rows = [];
		$used_service_tids = [];
		foreach ($rows as $row){
			$service_tid = $row['#row']->taxonomy_term_field_data_node__field_service_category_tid;
			if (!in_array($service_tid, $used_service_tids)) {
				$used_service_tids[] = $service_tid;
				$new_rows[] = $row;
			}
		}
		$vars['rows'][0]['#rows'] = $new_rows;
	}
}

/**
* Implements hook_preprocess_views_view
*/
function link2_preprocess_node(&$vars) {
	$node = $vars['node'];
	if ($node->getType() === 'service') {
		$reference = $node->get('field_service_category')->getValue();
		$tid = $reference[0]['target_id'];
		$term = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($tid);
		$vars['icon'] = $term->field_icon->value;
	}
}

/**
 * Implements hook_preprocess_breadcrumb()
 */
function link2_preprocess_breadcrumb(&$vars) {
  $service_tid = \Drupal::request()->query->get('svtid');
  if (!empty($service_tid)) {
  	$term = Term::load($service_tid);
  	if (is_object($term) && $term->bundle() === 'service_type') {
			$vars['breadcrumb'][0]['icon'] = '<i class="fas fa-angle-double-left"></i>' . $term->field_icon->value;
			$vars['breadcrumb'][0]['text'] = t('Back to ') . $term->getName();
			unset($vars['breadcrumb'][1]);
  	}
	}
	$route_match = \Drupal::routeMatch();
	if ($route_match->getRouteName() === 'entity.user.edit_form') {
		$vars['breadcrumb'] = [];
	}
	if ($route_match->getRouteName() === 'entity.node.canonical') {
		$node = $route_match->getParameter('node');
		if ($node->bundle() === 'service') {
			$vars['breadcrumb'] = [];
		}
	}
	if (!in_array($route_match->getRouteName(), [
		'entity.node.canonical',
		'entity.node.edit_form',
		'node.add',
		'entity.node.delete_form',
		])) {
    return;
	}

	$node = $route_match->getParameter('node');
	if ((is_object($node) && ($node->bundle() == 'location' ||
	$node->bundle() == 'service')) ||
	$route_match->getRouteName() == 'node.add' ||
	$route_match->getRouteName() == 'entity.node.delete_form') {
		$destination = \Drupal::request()->query->get('destination');
		if (!empty($destination) && $destination === "/user") {
			$crumb = [
				'icon' => '<i class="fas fa-angle-double-left"></i>',
				'text' => 'Back to Dashboard',
				'url' => '/user',
			];
			$vars['breadcrumb'] = [$crumb];
		}
		else {
			$vars['breadcrumb'] = [];
		}
	}
}

/**
 * Implements hook_preprocess_page()
 */
function link2_preprocess_page_title(&$vars) {
	$term = \Drupal::routeMatch()->getParameter('taxonomy_term');
	if (!is_null($term) && $term->bundle() === 'service_type') {
		$vars['icon'] = $term->field_icon->value;
	}
}

/**
 * Implements hook_preprocess_html()
 */
function link2_preprocess_html(&$variables) {
  foreach ($variables['user']->getRoles() as $role) {
    $variables['attributes']['class'][] = 'role-' . $role;
  }
}